<?xml version="1.0"?>
<!DOCTYPE project>

<project name="build-common-theme" xmlns:antelope="antlib:ise.antelope.tasks">
	<property name="project.dir" value="../.." />

	<import file="../build-common-plugin.xml" />

	<target name="build-css">
		<for param="css.file">
			<path>
				<fileset
					dir="docroot/_diffs/css"
					includes="*.css"
				/>
			</path>
			<sequential>
				<antcall target="build-css-cmd">
					<param name="css.file" value="@{css.file}" />
				</antcall>
			</sequential>
		</for>
	</target>

	<target name="build-css-cmd">
		<loadfile property="css.content" srcfile="${css.file}" />

		<antelope:post
			append="false"
			property="css.formatted"
			to="http://teenage.cz/acidofil/tools/cssformat.php"
			verbose="false"
		>
			<antelope:prop name="css" value="${css.content}" />
			<antelope:prop name="akce" value="format" />
			<antelope:prop name="sortclasses" value="0" />
			<antelope:prop name="sortattrs" value="1" />
			<antelope:prop name="stripcomms" value="0" />
			<antelope:prop name="textarea" value="1" />
			<antelope:prop name="mergeclasses" value="0" />
			<antelope:prop name="mergeattrs" value="1" />
			<antelope:prop name="shortcolors" value="1" />
			<antelope:prop name="shortattrs" value="1" />
		</antelope:post>

		<!--
		<textarea rows="12" cols="100">
		-->

		<antelope:stringutil string="${css.formatted}" property="css.formatted.beginindex">
			<indexof string="textarea rows" />
		</antelope:stringutil>

		<math
			datatype="int"
			operand1="${css.formatted.beginindex}"
			operand2="31"
			operation="+"
			result="css.formatted.beginindex"
		/>

		<!--
		</textarea>
		-->

		<antelope:stringutil string="${css.formatted}" property="css.formatted.endindex">
			<indexof string="/textarea" fromindex="${css.formatted.beginindex}" />
		</antelope:stringutil>

		<math
			datatype="int"
			operand1="${css.formatted.endindex}"
			operand2="3"
			operation="-"
			result="css.formatted.endindex"
		/>

		<antelope:stringutil string="${css.formatted}" property="css.formatted">
			<substring beginindex="${css.formatted.beginindex}" endindex="${css.formatted.endindex}" />
		</antelope:stringutil>

		<echo message="${css.formatted}" file="${css.file}" />

		<java
			classname="com.liferay.portal.tools.CSSFormatter"
			classpathref="portal.classpath"
			fork="true"
			newenvironment="true"
		>
			<jvmarg value="-Dexternal-properties=com/liferay/portal/tools/dependencies/portal-tools.properties" />
			<arg line="${css.file}" />
		</java>
	</target>

	<target name="clean">
		<if>
			<available file="docroot/_diffs" />
			<then>
				<delete includeemptydirs="true" quiet="true" failonerror="false">
					<fileset
						dir="docroot"
						excludes="_diffs.*,_diffs/**,WEB-INF/**"
					/>
				</delete>
			</then>
		</if>

		<antcall target="build-common-plugin.clean" />
	</target>

	<target name="compile">
		<if>
			<available file="docroot/_diffs/images" />
			<then>
				<for param="file">
					<path>
						<fileset
							dir="docroot/_diffs/images"
							includes="**/screenshot.png"
						/>
					</path>
					<sequential>
						<propertyregex input="@{file}" override="yes" property="thumbnail.file" regexp="screenshot\.png" replace="thumbnail\.png" />

						<java
							classname="com.liferay.portal.tools.ThumbnailBuilder"
							classpathref="portal.classpath"
						>
							<arg value="thumbnail.original.file=@{file}" />
							<arg value="thumbnail.thumbnail.file=${thumbnail.file}" />
							<arg value="thumbnail.height=120" />
							<arg value="thumbnail.width=160" />
							<arg value="thumbnail.overwrite=false" />
						</java>
					</sequential>
				</for>
			</then>
		</if>

		<if>
			<not>
				<isset property="theme.type" />
			</not>
			<then>
				<property name="theme.type" value="vm" />
			</then>
		</if>

		<if>
			<equals arg1="${theme.parent}" arg2="_unstyled" />
			<then>
				<copy todir="docroot" overwrite="true">
					<fileset
						dir="${app.server.portal.dir}/html/themes/_unstyled"
						excludes="templates/**"
					/>
				</copy>

				<copy todir="docroot/templates" overwrite="true">
					<fileset
						dir="${app.server.portal.dir}/html/themes/_unstyled/templates"
						excludes="init.${theme.type}"
						includes="*.${theme.type}"
					/>
				</copy>
			</then>
			<elseif>
				<equals arg1="${theme.parent}" arg2="_styled" />
				<then>
					<copy todir="docroot" overwrite="true">
						<fileset
							dir="${app.server.portal.dir}/html/themes/_unstyled"
							excludes="templates/**"
						/>
					</copy>

					<copy todir="docroot/templates" overwrite="true">
						<fileset
							dir="${app.server.portal.dir}/html/themes/_unstyled/templates"
							excludes="init.${theme.type}"
							includes="*.${theme.type}"
						/>
					</copy>

					<copy todir="docroot" overwrite="true">
						<fileset
							dir="${app.server.portal.dir}/html/themes/_styled"
						/>
					</copy>
				</then>
			</elseif>
			<elseif>
				<equals arg1="${theme.parent}" arg2="classic" />
				<then>
					<copy todir="docroot" overwrite="true">
						<fileset
							dir="${app.server.portal.dir}/html/themes/classic"
							excludes="_diffs/**,templates/**"
						/>
					</copy>

					<copy todir="docroot/templates" overwrite="true">
						<fileset
							dir="${app.server.portal.dir}/html/themes/classic/templates"
							includes="*.${theme.type}"
						/>
					</copy>
				</then>
			</elseif>
			<elseif>
				<isset property="theme.parent" />
				<then>
					<ant dir="${theme.parent}" target="compile" inheritAll="false" />

					<copy todir="docroot" overwrite="true">
						<fileset
							dir="${theme.parent}/docroot"
							excludes="_diffs/**,WEB-INF/*.properties,WEB-INF/*.xml"
						/>
					</copy>
				</then>
			</elseif>
		</if>

		<if>
			<available file="docroot/_diffs" />
			<then>
				<copy todir="docroot" overwrite="true">
					<fileset
						dir="docroot/_diffs"
					/>
				</copy>
			</then>
		</if>

		<if>
			<available file="docroot/WEB-INF/src" />
			<then>
				<mkdir dir="docroot/WEB-INF/classes"/>

				<copy todir="docroot/WEB-INF/classes">
					<fileset dir="docroot/WEB-INF/src" excludes="**/*.java" />
				</copy>
			</then>
		</if>
	</target>

	<target name="war" depends="compile">
		<if>
			<not>
				<available file="docroot/images/screenshot.png" />
			</not>
			<then>
				<echo>screenshot.png does not exist.</echo>
			</then>
		</if>

		<if>
			<not>
				<available file="docroot/images/thumbnail.png" />
			</not>
			<then>
				<echo>thumbnail.png does not exist.</echo>
			</then>
		</if>

		<mkdir dir="${project.dir}/dist" />

		<delete file="${plugin.file}" />

		<zip
			basedir="docroot"
			destfile="${plugin.file}"
			excludes="_diffs.*,_diffs/**"
		/>
	</target>
</project>